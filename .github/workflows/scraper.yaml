name: Daily Scrapy Run

on:
  # schedule:
  # - cron: "0 7 * * *" # Runs at 7 AM UTC daily
  # - cron: "*/5 * * * *" # every 5 minutes
  workflow_dispatch: # Allow manual runs

permissions:
  contents: write

jobs:
  scrape-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run Scrapy spider and save with timestamp
        run: |
          mkdir -p data
          timestamp=$(date -u +"%Y-%m-%d_%H-%M-%S")
          cd tutorial
          scrapy crawl quotes -O ../data/quotes_${timestamp}.json
          cd ..
          # Reformat the JSON file with indentation
          python -m json.tool data/quotes_${timestamp}.json > data/tmp.json && mv data/tmp.json data/quotes_${timestamp}.json

      - name: Commit and push data
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/
          git commit -m "Update scraped data at $(date -u +"%Y-%m-%d %H:%M:%S") [skip ci]" || echo "No changes to commit"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Generate dynamic dashboard
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # needed to run gh api command
        run: |
          mkdir -p public
          echo "<html><body><h1>Recent Scraper Runs</h1><table border=1>" > public/index.html
          gh api repos/${{ github.repository }}/actions/workflows/scraper.yaml/runs \
            --jq '.workflow_runs[:5][] | "<tr><td>\(.run_number)</td><td>\(.conclusion)</td><td>\(.updated_at)</td></tr>"' \
            >> public/index.html
          echo "</table></body></html>" >> public/index.html

      - name: Deploy to GitHub Pages
        if: ${{ always() }}
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          publish_branch: gh-pages # explicitly deploy to gh-pages
          # Optional: commit message for Pages branch
          commit_message: Update dashboard at $(date -u +"%Y-%m-%d %H:%M:%S UTC")
